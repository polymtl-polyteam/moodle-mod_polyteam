{"version":3,"file":"polyteam.min.js","sources":["../src/polyteam.js"],"sourcesContent":["import * as d3 from \"https://cdn.jsdelivr.net/npm/d3@7\";\n\n// TODO : Remove disable\n/* eslint-disable no-console */\n\nexport const displayTeams = () => {\n\n    const generatedTeamsDiv = document.getElementById(\"generatedteams\");\n    let cognitiveModes = [\"EF\", \"EN\", \"ES\", \"ET\", \"IF\", \"IN\", \"IS\", \"IT\"];\n    const generatedTeamsRaw = JSON.parse(generatedTeamsDiv.dataset.generatedteams);\n    const generatedTeams = [\n        cognitiveModes.reduce((obj, mode) => {\n            obj[mode] = 1 / cognitiveModes.length * 100;\n            return obj;\n        }, {}),\n        ...generatedTeamsRaw.map(team => {\n            const counter = team['cognitive_modes_counter'];\n            const cognitiveModesCount = Object.entries(counter)\n                /* eslint-disable-next-line no-unused-vars */\n                .reduce((sum, [_, modeCount]) => sum + modeCount, 0);\n            return cognitiveModes.reduce((obj, mode) => {\n                obj[mode] = counter[mode] / cognitiveModesCount * 100;\n                return obj;\n            }, {});\n        })\n    ];\n    const matchingStrategies = ['Ideal', ...new Set(generatedTeamsRaw.map(team => team['matching_strategy']))];\n\n    // Stacked bar chart inspired from https://d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\n    // Declare the chart dimensions and margins.\n    // set the dimensions and margins of the graph\n    const parentWidth = document.getElementById(\"polyteamgeneratedteams\").getBoundingClientRect().width;\n    // const barsWidth = Math.min(\n    //     1000,\n    //     Math.max(600, 25 * generatedTeams.length + (cognitiveModes.length - 1) * 5)\n    // );\n    const margin = {top: 20, right: 50, bottom: 50, left: 50},\n        width = parentWidth - margin.left - margin.right, // TODO: Adjust width with bars\n        height = 400 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    let svg = d3.select(\"#polyteamgeneratedteams\")\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // TODO : Internationalisation\n    const labels = generatedTeams.map((_, index) => index === 0 ? \"Ideal\" : `${index}`);\n\n    // Legend\n    // Append legend items to SVG\n    const markersColors = d3.scaleOrdinal()\n        .domain(matchingStrategies)\n        .range([\"burlywood\", \"black\", \"chocolate\"]);\n    var legend = svg.selectAll(\".legend\")\n        .data(matchingStrategies)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"legend\");\n\n    legend.append(\"circle\")\n        .attr(\"cx\", 20)\n        .attr(\"cy\", 10)\n        .attr(\"r\", 6)\n        .style(\"fill\", function (d) {\n            return markersColors(d);\n        });\n\n    legend.append(\"text\")\n        .attr(\"x\", 40)\n        .attr(\"y\", 10)\n        .attr(\"dy\", \".35em\")\n        .text(function (d) {\n            return d;\n        })\n        .style(\"fill\", function (d) {\n            return markersColors(d);\n        });\n\n    // Calculate total width of all legend items\n    var legendItems = document.querySelectorAll(\".legend\");\n    var totalWidth = 0;\n    legendItems.forEach(function (item) {\n        totalWidth += item.getBBox().width;\n    });\n\n    // Define padding between legend items\n    var padding = 40;\n\n    // Adjust position of legend items\n    var startX = (width - totalWidth - padding * (matchingStrategies.length - 1)) / 2;\n    var previousWidth = 0;\n    legend.attr(\"transform\", function (d, i) {\n        previousWidth += i === 0 ? 0 : legendItems[i - 1].getBBox().width;\n        var xPos = startX + previousWidth + (i * padding);\n        return \"translate(\" + xPos + `, ${-margin.top})`;\n    });\n\n    // Add X axis\n    let x = d3.scaleBand()\n        .domain(labels)\n        .range([0, width])\n        .padding([0.2]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x).tickSizeOuter(0));\n\n    // Add X axis label:\n    svg.append(\"text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"x\", (width + margin.left + margin.right) / 2)\n        .attr(\"y\", height + margin.bottom * 0.75)\n        .attr(\"font-size\", \"medium\")\n        .text(\"Teams\"); // TODO: Internationalization\n\n    // Add Y left axis\n    let yLeft = d3.scaleLinear()\n        .domain([0, 100])\n        .range([height, 0]);\n    svg.append(\"g\")\n        .call(d3.axisLeft(yLeft));\n\n    // Y left axis label:\n    svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -margin.left * 0.75)\n        .attr(\"x\", -height / 2)\n        .attr(\"font-size\", \"medium\")\n        .text(\"Cognitive variances (%)\"); // TODO: Internationalization\n\n    // Add Y right axis\n    const cognitiveVariances = [\n        0,\n        ...generatedTeamsRaw.map(t => t[\"cognitive_variance\"])\n    ];\n    let yRight = d3.scaleLinear()\n        .domain([0, Math.max(12, Math.max(...cognitiveVariances) + 1)])\n        .range([height, 0]);\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(${width}, 0)`)\n        .call(d3.axisRight(yRight));\n\n    // Y right axis label:\n    svg.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", width + margin.left * 0.75)\n        .attr(\"x\", -height / 2)\n        .attr(\"font-size\", \"medium\")\n        .text(\"Standard deviation (markers)\"); // TODO: Internationalization\n\n    // color palette = one color per subgroup\n    let color = d3.scaleOrdinal()\n        .domain(cognitiveModes)\n        .range(['#1F77B4', '#FF7F0E', '#2CA02C', '#D62728', '#9467BD', '#8C564B', '#E377C2', '#7F7F7F']);\n\n    // stack the data? --> stack per subgroup\n    let stackedData = d3.stack().keys(cognitiveModes)(generatedTeams);\n\n    // Show the bars\n    svg.append(\"g\")\n        .selectAll(\"g\")\n        // Enter the stack data = loop key per key = group per group\n        .data(stackedData)\n        .enter().append(\"g\")\n        .attr(\"fill\", function (d) {\n            return color(d.key);\n        })\n        .selectAll(\"rect\")\n        // enter a second time = loop subgroup per subgroup to add all rectangles\n        .data(function (d) {\n            return d;\n        })\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", function (d, i) {\n            return x(labels[i]);\n        })\n        .attr(\"y\", function (d) {\n            return yLeft(d[1]);\n        })\n        .attr(\"height\", function (d) {\n            return yLeft(d[0]) - yLeft(d[1]);\n        })\n        .attr(\"width\", x.bandwidth());\n\n    svg.append(\"g\")\n        .selectAll(\"g\")\n        // Enter the stack data = loop key per key = group per group\n        .data(cognitiveModes)\n        .enter()\n        .append(\"text\")\n        .text(function (d) {\n            return d;\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"x\", function () {\n            return x(labels[0]) + x.bandwidth() / 2;\n        })\n        .attr(\"y\", function (_, i) {\n            return (yLeft(stackedData[i][0][0]) + yLeft(stackedData[i][0][1])) / 2;\n        })\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"font-size\", `${Math.min(x.bandwidth() / 2, 35)}px`)\n        .attr(\"fill\", \"white\");\n\n    svg.append(\"g\")\n        .selectAll(\"dot\")\n        // Enter the stack data = loop key per key = group per group\n        .data(cognitiveVariances)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", function (_, i) {\n            return x(labels[i]) + x.bandwidth() / 2;\n        })\n        .attr(\"cy\", function (d) {\n            return yRight(d);\n        })\n        .attr(\"r\", Math.min(5, x.bandwidth() * 0.45))\n        .style(\"fill\", function (_, i) {\n            if (i === 0) {\n                return markersColors(\"Ideal\");\n            }\n            return markersColors(generatedTeamsRaw[i - 1][\"matching_strategy\"]);\n        });\n\n};\n"],"names":["generatedTeamsDiv","document","getElementById","cognitiveModes","generatedTeamsRaw","JSON","parse","dataset","generatedteams","generatedTeams","reduce","obj","mode","length","map","team","counter","cognitiveModesCount","Object","entries","sum","_","modeCount","matchingStrategies","Set","parentWidth","getBoundingClientRect","width","margin","height","svg","d3","select","append","attr","labels","index","markersColors","scaleOrdinal","domain","range","legend","selectAll","data","enter","style","d","text","legendItems","querySelectorAll","totalWidth","forEach","item","getBBox","startX","previousWidth","i","x","scaleBand","padding","call","axisBottom","tickSizeOuter","yLeft","scaleLinear","axisLeft","cognitiveVariances","t","yRight","Math","max","axisRight","color","stackedData","stack","keys","key","bandwidth","min"],"mappings":"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"}